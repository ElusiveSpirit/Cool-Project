Дополнения.

1. Можно хранить локально последние сообщения (~30) в каждой ветке пользователя.
2. При запуске клиент посылает на сервер запрос [connect] с параметрами
    -логин или id
    -пароль
    -флаг главного потока или его id
  Сервер в ответ посылает либо подтверждение о соединении, либо разрывает соединение (при неверном логине/пароле).
  Далее в фоне начинают загружаться ветки, в которых произошли изменения.
3. При переходе на ветку, которая еще не синхронизирована, происходит загрузка в основном потоке.
4. Сервер периодически посылает [is_alive], клиент отвечает [still_alive].
5. При общении клиент отправляет [send_msg] с параметрами
    -логин или id
    -логин получателя или его id
    -тема
    -сообщение
    -время
6. Если можно будет создавать беседы, то нужно добавить еще group_id.
7. Когда сообщение от отправителя приходит на сервер, он отправляет его получателю с теми же параметрами.
8. Нужно предусмотреть получение статистики, истории, информации о состоянии пользователя.
9. Картинки, статистику и историю, думаю, нужно загружать и посылать в отдельном потоке, создаваемом при надобности.
   Для этого во втором пункте есть флаг, показывающий главный это поток или дополнительный.
10.Клиент может послать [disconnect] и разорвать соединение с сервером.

Всего я пока насчитал 3 серверных метода и 7 клиентских.
Сервер:
    -is_alive
    -new_msg
    -send_data

Клиент:
    -connect
    -still_alive
    -send_msg
    -send_data
    -get_history \ get_statistics
    -get_user_status
    -disconnect

send_data: {type, len, payload}
